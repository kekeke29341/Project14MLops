# Istio Gateway リソース定義
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: mlops-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway # Istio ingress gateway用
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*" # すべてのホストに対応
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - "*" # すべてのホストに対応
    tls:
      mode: SIMPLE
      credentialName: mlops-tls-cert # TLS証明書のSecret名

---
# モデルサービスへのVirtualService
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: model-predictor-vs
  namespace: kubeflow
spec:
  hosts:
  - "models.example.com" # ドメイン名を実際の環境に合わせて変更
  gateways:
  - istio-system/mlops-gateway
  http:
  - match:
    - uri:
        prefix: /v1/models/
    route:
    - destination:
        host: model-predictor-predictor.kubeflow.svc.cluster.local
        port:
          number: 80
    timeout: 60s
    retries:
      attempts: 3
      perTryTimeout: 30s
      retryOn: gateway-error,connect-failure,refused-stream

---
# MLflow用のVirtualService
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: mlflow-vs
  namespace: kubeflow
spec:
  hosts:
  - "mlflow.example.com" # ドメイン名を実際の環境に合わせて変更
  gateways:
  - istio-system/mlops-gateway
  http:
  - route:
    - destination:
        host: mlflow.kubeflow.svc.cluster.local
        port:
          number: 5000

---
# デフォルトのDestinationRule（接続ポリシーの設定）
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: model-predictor-dr
  namespace: kubeflow
spec:
  host: model-predictor-predictor.kubeflow.svc.cluster.local
  trafficPolicy:
    connectionPool:
      http:
        http1MaxPendingRequests: 100
        maxRequestsPerConnection: 10
      tcp:
        maxConnections: 100
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s

---
# サービスエントリー（外部サービスへの接続）
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: external-s3
  namespace: kubeflow
spec:
  hosts:
  - "s3.amazonaws.com"
  - "*.s3.amazonaws.com"
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  resolution: DNS
  location: MESH_EXTERNAL

---
# AuthorizationPolicy（アクセス制御）
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: model-predictor-authz
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      serving.kubeflow.org/inferenceservice: model-predictor
  rules:
  - from:
    - source:
        namespaces: ["kubeflow", "default"]
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]

---
# RequestAuthentication（トークン認証）
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: jwt-auth
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  jwtRules:
  - issuer: "https://auth.example.com" # 実際の認証サービスに合わせて変更
    jwksUri: "https://auth.example.com/.well-known/jwks.json" # 実際の認証サービスに合わせて変更

---
# PeerAuthentication（サービス間通信のmTLS設定）
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: kubeflow
spec:
  mtls:
    mode: PERMISSIVE # または STRICT（クラスタ内通信を全てmTLSで暗号化）

---
# サーキットブレーカー設定（トラフィック制御）
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: circuit-breaker
  namespace: kubeflow
spec:
  host: "*.kubeflow.svc.cluster.local"
  trafficPolicy:
    connectionPool:
      http:
        http1MaxPendingRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
      tcp:
        maxConnections: 100
        connectTimeout: 5s
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 10s
      baseEjectionTime: 30s
      maxEjectionPercent: 50

---
# HTTPルーティングのカナリアデプロイメント例
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: canary-routing
  namespace: kubeflow
spec:
  hosts:
  - "models.example.com" # ドメイン名を実際の環境に合わせて変更
  gateways:
  - istio-system/mlops-gateway
  http:
  - match:
    - headers:
        x-canary:
          exact: "true"
    route:
    - destination:
        host: model-predictor-v2-predictor.kubeflow.svc.cluster.local
        port:
          number: 80
  - route:
    - destination:
        host: model-predictor-predictor.kubeflow.svc.cluster.local
        port:
          number: 80
      weight: 90
    - destination:
        host: model-predictor-v2-predictor.kubeflow.svc.cluster.local
        port:
          number: 80
      weight: 10
